Random & Limits

Exemplu 1
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
int main()
{
	printf("%d\n", INT_MAX);
	printf("%d", INT_MIN);
 printf("%d", RAND_MAX);
	printf("%ld\n", LONG_MAX);
	printf("%ld\n", LONG_MIN);
}

rand() and srand() in C
rand ()
Funcția rand() este utilizată pentru generarea numerelor aleatoare din diapazonul  [0, RAND_MAX). Pentru a folosi această funcție trebuie de importat fișierul-antet #include <stdlib.h>.
Reține: Dacă numerele aleatoare sunt generate cu rand() fără a apela mai întâi srand(), programul dvs. va crea aceeași succesiune de numere de fiecare dată când rulează.

Exemplu 2
#include <stdio.h>
#include <stdlib.h>

int main(void)
{
		printf(" %d ", rand());
printf(" %d ", rand());
printf(" %d ", rand());

	return 0;
}

NOTĂ: Acest program va crea aceeași secvență de numere aleatorii la fiecare rulare a programului.
Testează:
Output 1: ?
Output 2: ? 
Output 3: ?
 
srand()
Funcția srand() stabilește punctul de plecare pentru producerea unei serii de numere întregi pseudo-aleatorii, prin urmare, funcția srand() setează generatorul la un punct de plecare diferit.
Notă: Generatorul de numere pseudo-aleatorii ar trebui să fie inițializat o singură dată, înainte de orice apeluri către rand() și începutul programului. 
Practica standard este de a folosi rezultatul unui apel către srand(time (0)) ca inițializare. 
Cu toate acestea, time() returnează o valoare time_t care variază de fiecare dată și, prin urmare, numărul pseudo-aleator variază pentru fiecare apel de program.

Exemplu 3
#include <stdio.h>
#include <stdlib.h>
#include<time.h>

int main(void)
{
	srand(time(0));
// srand(time(NULL));

	printf(" %d ", rand());
	printf(" %d ", rand());
printf(" %d ", rand());

	return 0;
}

NOTĂ: Acest program va crea secvențe diferite de numere aleatorii la fiecare rulare a programului.
 
Generarea numerelor aleatorii între un interval predefinit
Input : Lower = 50,
        Upper = 100
        
Deoarece C nu are o funcție încorporată pentru generarea unui număr în interval, dar are o funcție rand care generează un număr aleator de la 0 la RAND_MAX. 
Cu ajutorul rand () se poate genera un număr în interval ca num = (rand() % (upper – lower + 1)) + lower

Exemplu 4
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
	int lower = 2, upper = 35;
  	srand(time(0));

	int num = (rand() % (upper - lower + 1)) + lower;
	printf("%d ", num);

	return 0;
}
NOTĂ: Folosim operatorul % în programul nostru pentru orice set de valori a și b pentru a genera numere între zero și valoarea indicate după operatorul %. 
De exemplu:
Pentru a = 1243 și b = 100
a % b = 1243 % 100 = 43
Pentru a = 99 și b = 100
a % b = 99 % 100 = 99
Pentru a = 1000 și b = 100
a % b = 1000 % 100 = 0

Exemplu 5
#include <stdio.h>
#include <stdlib.h>
int main() {
  int n;
  printf("Numar in intervalul [1,100]\n");
  srand(time(NULL));
  n = rand() % 100 + 1;
  printf("%d\n", n);
  
  return 0;
}

Program to generate float random numbers

Exemplu 6
#include <stdio.h>  
#include <stdlib.h>  
#include <time.h>  
  
int main()  
{  
    srand(time(NULL));  
    printf("%f", (float)rand() / RAND_MAX + rand() % 100);  
    printf("\n");  
      
    return 0;  
}  

